@using Newtonsoft.Json
@using Newtonsoft.Json.Linq
@{ 
	ViewBag.Title = "Article"; 
	ViewBag.GoBack = true; 
	var json = JsonConvert.DeserializeObject(ViewBag.JSON);
	var img = json["content"].Children()["img"];
}

<div class="reader">
	<div class="reader_container">
		<h1>@json.title</h1>
		<small>@json.provider_name | <a href="@json.url" target="_blank"> Original Article </a> </small>
		<p><blockquote>@json.description</blockquote></p>
		@Html.Raw(json.content)
		@if(json.media.length > 0){ 
			@Html.Raw(json.media) 
		}
	</div>
</div>

@section scripts{
	<script>
		$(function(){
			$("img").map((img, key) => {
				$(key).attr('data-src', $(key).attr('src'));
			});
			$("img").unveil(200, function() {
				$(this).on('load', function(){
					$(this).velocity({"opacity": "1"});
				});
			});
		});
	</script>
}